[tox]
description = "PyRFC Build"
minversion = 4.5
envlist =
     format, lint, build_docs, reuse, sdist, pack, 
     py37, py38, py39, py310, py311
skip_missing_interpreters = false
isolated_build = true

[testenv:.pkg]
passenv = SAPNWRFC_HOME

[testenv]
description = Build binary wheels and run unit tests
passenv = SAPNWRFC_HOME
deps =
    build
    Cython
    pytest
    pytest-testdox
commands =
    # build binary wheel for release
    python -m build --no-isolation --wheel --outdir dist
    # unit test
    python -m pytest tests --testdox -vvx {posargs}

[testenv:sdist]
description = Build sdist
platform = linux
skip_install = true
passenv = SAPNWRFC_HOME
deps =
    Cython
    build
commands =
    python -m build --sdist --outdir dist

[testenv:build_docs]
description = Build sphinx documentation
platform = darwin
passenv = SAPNWRFC_HOME
changedir=doc
allowlist_externals =
    cp
    rm
    sphinx-build
deps = sphinx
commands =
    rm -rf _build 
    sphinx-build -b html -a -E -d _build/doctrees . _build/html
    cp -R _build/html {env_tmp_dir}/.
    # git checkout gh-pages
    # yes | cp -Rf {env_tmp_dir}/html/. .

[testenv:format]
description = Run formatter
platform = darwin
skip_install = true
deps = black
commands =
    black --check src tests examples

[testenv:lint]
description = Check linting
platform = darwin
skip_install = true
deps =
    flake8
    cython-lint
    flake8-bugbear
    flake8-builtins
    flake8-comprehensions
    flake8-string-format
    pydocstyle
commands =
    cython-lint src/pyrfc --max-line-length=180
    flake8 src setup.py tests examples --max-line-length=180 --ignore=F401
    pydocstyle src

[testenv:reuse]
description = Reuse compliance check
platform = darwin
skip_install = true
deps = reuse
commands=
    python -m reuse lint

[testenv:release]
description = Publish release
platform = darwin
skip_install = true
deps = twine
commands=
    python -m twine upload dist/*.tar.gz dist/*osx*.* dist/*win*.*  --verbose

[testenv:pack]
description = Build the test package, a prep for unit tests
platform = darwin
skip_install = true
passenv = SAPNWRFC_HOME
allowlist_externals =
    find
    tar
    unzip
deps =
    build
    setuptools
    Cython
commands =
    python -m build --no-isolation --sdist --wheel --outdir {env_tmp_dir}
    find {env_tmp_dir} -name *.tar.gz -exec tar -xf {} -C {env_tmp_dir} \;
    unzip {env_tmp_dir}/\*.whl -d {env_tmp_dir}
    find {env_tmp_dir} '(' -name *.tar.gz -o -name *.whl ')' -exec rm {} \;
