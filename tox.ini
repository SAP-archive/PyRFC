[tox]
description = "PyRFC Build"
minversion = 4.5
envlist =
     lint_format-py311, docs-py311, reuse-py311, sdist-py311, pack-py311,
     py38, py39, py310, py311
package = wheel
skip_missing_interpreters = false
isolated_build = true

[testenv:.pkg]
passenv = SAPNWRFC_HOME, PYRFC_BUILD_CYTHON

[testenv]
description = Build binary wheels and run unit tests
passenv = SAPNWRFC_HOME, PYRFC_BUILD_CYTHON
deps =
    build
    Cython
    pytest
    pytest-testdox
    pytest-html-reporter
commands =
    # build binary wheel for release
    python -m build --wheel --outdir dist
    # unit test
    python -m pytest tests --testdox --html-report=./report {posargs}
    # python -c "import pyrfc; print(pyrfc.__version__)"

[testenv:lint_format-py311]
description = Check linting
platform = darwin
skip_install = true
deps =
    ruff
    cython-lint
    pydocstyle
commands =
    cython-lint src/pyrfc --max-line-length=180
    ruff check --fix src setup.py tests examples --line-length=120 --ignore=F401
    pydocstyle src

[testenv:docs-py311]
description = Build sphinx documentation
platform = darwin
passenv = SAPNWRFC_HOME
changedir=doc
allowlist_externals =
    sphinx-build
deps = sphinx
commands =
    sphinx-build -b html -a -E -d {envtmpdir}/doctrees . {envtmpdir}/html
    # git checkout gh-pages
    # yes | cp -Rf {envtmpdir}/html/. .

[testenv:reuse-py311]
description = Reuse compliance check
platform = darwin
skip_install = true
deps = reuse
commands=
    python -m reuse lint

[testenv:pypi-publish]
description = Publish on PyPI
platform = darwin
skip_install = true
deps = twine
commands =
    python -m twine upload dist/*-macosx*.whl dist/*-win*.whl dist/*.tar.gz  --verbose

[testenv:pypi-test-publish]
description = Publish on Test PyPI
platform = darwin
skip_install = true
deps = twine
commands =
    python -m twine upload --repository testpypi dist/*-macosx*.whl dist/*-win*.whl dist/*.tar.gz --verbose

[testenv:pack-py311]
description = Build the test wheel for unit test
platform = linux
skip_install = true
passenv = SAPNWRFC_HOME, PYRFC_BUILD_CYTHON
allowlist_externals =
    find
    tar
    unzip
deps =
    build
    setuptools
    Cython
commands =
    python -m build --sdist --wheel --outdir {env_tmp_dir}
    find {env_tmp_dir} -name *.tar.gz -exec tar -xf {} -C {env_tmp_dir} \;
    unzip {env_tmp_dir}/\*.whl -d {env_tmp_dir}
    find {env_tmp_dir} '(' -name *.tar.gz -o -name *.whl ')' -exec rm {} \;

[testenv:sdist-py311]
description = Build sdist
platform = linux
skip_install = true
passenv = SAPNWRFC_HOME, PYRFC_BUILD_CYTHON
deps =
    Cython
    build
commands =
    python -m build --sdist --outdir dist
